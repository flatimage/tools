diff --git a/bwrap/bubblewrap.c b/bwrap/bubblewrap.c
index f60625767..82b8a9d31 100644
--- a/bwrap/bubblewrap.c
+++ b/bwrap/bubblewrap.c
@@ -24,6 +24,7 @@
 #include <pwd.h>
 #include <grp.h>
 #include <ctype.h>
+#include <time.h>
 #include <sys/mount.h>
 #include <sys/socket.h>
 #include <sys/wait.h>
@@ -35,6 +36,7 @@
 #include <linux/sched.h>
 #include <linux/seccomp.h>
 #include <linux/filter.h>
+#include <sys/syscall.h>
 
 #include "utils.h"
 #include "network.h"
@@ -82,6 +84,7 @@ static uid_t opt_sandbox_uid = -1;
 static gid_t opt_sandbox_gid = -1;
 static int opt_sync_fd = -1;
 static int opt_block_fd = -1;
+static int opt_error_fd = -1;
 static int opt_userns_block_fd = -1;
 static int opt_info_fd = -1;
 static int opt_json_status_fd = -1;
@@ -1154,16 +1157,43 @@ privileged_op (int         privileged_op_socket,
       break;
 
     case PRIV_SEP_OP_OVERLAY_MOUNT:
-      if (mount ("overlay", arg2, "overlay", MS_MGC_VAL, arg1) != 0)
+      while (mount ("overlay", arg2, "overlay", MS_MGC_VAL, arg1) != 0)
         {
-          /* The standard message for ELOOP, "Too many levels of symbolic
-           * links", is not helpful here. */
-          if (errno == ELOOP)
-            die ("Can't make overlay mount on %s with options %s: "
-                "Overlay directories may not overlap",
-                arg2, arg1);
-          die_with_mount_error ("Can't make overlay mount on %s with options %s",
-                                arg2, arg1);
+          /* Wait for busy upper directory */
+          if (errno == EBUSY)
+          {
+            struct timespec req, rem;
+            req.tv_sec = 0;
+            req.tv_nsec = 50 * 1000000L;
+            if (nanosleep(&req, &rem) == -1)
+            {
+              die("Failed nanosleep");
+            }
+            continue;
+          }
+          /* Describe error:
+            Write the system call number and the error */
+          int syscall_nr = SYS_mount;
+          int errno_nr = errno;
+          if (opt_error_fd != -1)
+          {
+            write(opt_error_fd, &syscall_nr, sizeof(syscall_nr));
+            write(opt_error_fd, &errno_nr, sizeof(errno_nr));
+            exit(1);
+          } // if
+          else
+          {
+            /* The standard message for ELOOP, "Too many levels of symbolic
+             * links", is not helpful here. */
+            if (errno == ELOOP)
+            {
+              die ("Can't make overlay mount on %s with options %s: "
+                  "Overlay directories may not overlap",
+                  arg2, arg1);
+            }
+            die_with_mount_error ("Can't make overlay mount on %s with options %s",
+                                  arg2, arg1);
+          } // else
         }
       break;
 
@@ -2320,6 +2350,26 @@ parse_args_recurse (int          *argcp,
 
           opt_sync_fd = the_fd;
 
+          argv += 1;
+          argc -= 1;
+        }
+      else if (strcmp (arg, "--error-fd") == 0)
+        {
+          int the_fd;
+          char *endptr;
+
+          if (argc < 2)
+            die ("--error-fd takes an argument");
+
+          if (opt_error_fd != -1)
+            warn_only_last_option ("--error-fd");
+
+          the_fd = strtol (argv[1], &endptr, 10);
+          if (argv[1][0] == 0 || endptr[0] != 0 || the_fd < 0)
+            die ("Invalid fd: %s", argv[1]);
+
+          opt_error_fd = the_fd;
+
           argv += 1;
           argc -= 1;
         }
@@ -3128,7 +3178,7 @@ main (int    argc,
           if (errno == EINVAL)
             die ("Creating new namespace failed, likely because the kernel does not support user namespaces.  bwrap must be installed setuid on such systems.");
           else if (errno == EPERM && !is_privileged)
-            die ("No permissions to create a new namespace, likely because the kernel does not allow non-privileged user namespaces. On e.g. debian this can be enabled with 'sysctl kernel.unprivileged_userns_clone=1'.");
+            die ("No permissions to creating new namespace, likely because the kernel does not allow non-privileged user namespaces. On e.g. debian this can be enabled with 'sysctl kernel.unprivileged_userns_clone=1'.");
         }
 
       if (errno == ENOSPC)
diff --git a/bwrap/utils.c b/bwrap/utils.c
index 51875aea9..2a5c06550 100644
--- a/bwrap/utils.c
+++ b/bwrap/utils.c
@@ -93,7 +93,7 @@ die_with_mount_error (const char *format, ...)
   bwrap_logv (LOG_ERR, format, args, mount_strerror (errsv));
   va_end (args);
 
-  exit (1);
+  exit (errno);
 }
 
 void
