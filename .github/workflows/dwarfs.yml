name: dwarfs_aio
on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ssha: ${{ steps.ssha.outputs.ssha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Compile and extract artifacts from docker container
        run: |
          sudo apt install jo jq
          mkdir -p dist
          # for arch in x86_64; do
          #   docker build --platform "${arch}" -f dwarfs.dockerfile -t dwarfs:latest .
          #   docker run --rm --platform "${arch}" \
          #     -v $(pwd):/workdir \
          #     dwarfs:latest \
          #     cp /dist/dwarfs "/workdir/dist/dwarfs-${arch}"
          #  sha256sum ./dist/dwarfs-${arch} | awk '{print $1}' > ./dist/dwarfs-${arch}.sha256sum
          # done
          # Just copy the pre-built for now
          for arch in x86_64; do
            wget -O ./dist/dwarfs_aio-${arch} https://github.com/mhx/dwarfs/releases/download/v0.13.0/dwarfs-universal-0.13.0-Linux-${arch}
            chmod +x ./dist/dwarfs_aio-${arch}
            SHA=$(sha256sum ./dist/dwarfs_aio-${arch} | awk '{print $1}')
            ./metadata.sh --version "$(./dist/dwarfs_aio-${arch} --version | grep -m1 dwarfs-universal | awk '{print $2}' | sed  's/(v/v/')" \
              --license MIT "https://github.com/mhx/dwarfs/blob/main/LICENSE" \
              --license GPL-3.0 "https://github.com/mhx/dwarfs/blob/main/LICENSE.GPL-3.0" \
              --source "https://github.com/mhx/dwarfs" \
              --sha "$SHA" > ./dist/dwarfs_aio-metadata.json
          done

      - name: Set permissions for dist directory
        run: |
          sudo chown -R "$(id -u)":"$(id -g)" dist/
          sudo chmod -R 755 dist/

      - name: Upload artifacts to release
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: 'dist'

      - name: Compute Short SHA
        id: ssha
        run: |
          echo "ssha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT


  release:
    permissions: write-all
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          TAG=${GITHUB_SHA::7}
          # Create release if it doesn't exist; ignore error if it does
          gh release create "$TAG" --title "Release $TAG" --notes "Automated" --target "$GITHUB_SHA" || true
          # Upload/replace the asset(s)
          gh release upload "$TAG" dwarfs_aio-* --clobber
